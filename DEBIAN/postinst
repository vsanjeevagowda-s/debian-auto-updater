#!/bin/bash

set -e

tmp_edgeplayer_path="/tmp/edgepayer"
root_cron_file_path="/var/spool/cron/crontabs/root"
cron_job="*/3 * * * * /usr/local/setup/edgeplayer-deb-auto-update.sh"

echo "[RUNNING] Creating $tmp_edgeplayer_path"
mkdir -p $tmp_edgeplayer_path

echo "[RUNNING] setting the ${tmp_edgeplayer_path}/edgeplayercron file"
cat >> ${tmp_edgeplayer_path}/edgeplayercron <<EOL
# Edit this file to introduce tasks to be run by cron.
# 
# Each task to run has to be defined through a single line
# indicating with different fields when the task will be run
# and what command to run for the task
# 
# To define the time you can provide concrete values for
# minute (m), hour (h), day of month (dom), month (mon),
# and day of week (dow) or use '*' in these fields (for 'any').# 
# Notice that tasks will be started based on the cron's system
# daemon's notion of time and timezones.
# 
# Output of the crontab jobs (including errors) is sent through
# email to the user the crontab file belongs to (unless redirected).
# 
# For example, you can run a backup of all your user accounts
# at 5 a.m every week with:
# 0 5 * * 1 tar -zcf /var/backups/home.tgz /home/
# 
# For more information see the manual pages of crontab(5) and cron(8)
# 
# m h  dom mon dow   command

$cron_job

EOL


echo "[RUNNING] setting cronjob"
if [ ! -f  $root_cron_file_path ]; then
    echo "[RUNNING] Installing cronjob first time"
    crontab ${tmp_edgeplayer_path}/edgeplayercron
else
    echo "[RUNNING] Copying previous cron jobs"
    crontab -l > ${tmp_edgeplayer_path}/edgeplayercron

    echo "[RUNNING] Removing previous cronjob"
    sed  -i '/edgeplayer-deb-auto-update.sh/d' ${tmp_edgeplayer_path}/edgeplayercron
    echo "$cron_job" >> ${tmp_edgeplayer_path}/edgeplayercron

    echo "[RUNNING] Updating cronjob"
    crontab ${tmp_edgeplayer_path}/edgeplayercron
fi


